plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0' // Shadow Plugin 추가
}


group = 'org.mark'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation 'com.google.inject:guice:5.1.0'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'io.vavr:vavr:0.10.3'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'

    compileOnly("io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT")

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.jar{
    archiveFileName = 'RegenBlock.jar'
    destinationDirectory = file('C:\\Users\\sksqk\\OneDrive\\문서\\minecraft\\test-server\\plugins')
}

shadowJar {
    archiveFileName = 'RegenBlock.jar'
    destinationDirectory = file('C:\\Users\\sksqk\\OneDrive\\문서\\minecraft\\test-server\\plugins')
    mergeServiceFiles() // Service 파일 병합
    configurations = [project.configurations.runtimeClasspath] // 의존성 포함
    relocate 'com.google', 'org.mark.regenBlock.shaded.com.google' // 패키지 네임 충돌 방지
}
